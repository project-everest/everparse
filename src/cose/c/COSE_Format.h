

#ifndef COSE_Format_H
#define COSE_Format_H

#include "krmllib.h"

#include "CBORDetAPI.h"
#include "CBORDetAbstract.h"

bool COSE_Format_validate_bool(cbor_det_t c);

typedef bool COSE_Format_evercddl_bool;

bool COSE_Format_uu___is_Mkevercddl_bool0(bool projectee);

/**
Parser for evercddl_bool
*/
bool COSE_Format_parse_bool(cbor_det_t c);

typedef struct Pulse_Lib_Slice_slice__uint8_t_s
{
  uint8_t *elt;
  size_t len;
}
Pulse_Lib_Slice_slice__uint8_t;

typedef enum { FStar_Pervasives_Native_None, FStar_Pervasives_Native_Some }
FStar_Pervasives_Native_option__size_t_tags;

/**
Serializer for evercddl_bool
*/
size_t COSE_Format_serialize_bool(bool c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_bool_Pulse_Lib_Slice_slice_uint8_t_s
{
  bool fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_bool_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_bool___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_bool_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_bool___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_bool___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_bool(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_everparsenomatch(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_everparsenomatch0 }
COSE_Format_evercddl_everparsenomatch;

bool
COSE_Format_uu___is_Mkevercddl_everparsenomatch0(
  COSE_Format_evercddl_everparsenomatch projectee
);

/**
Parser for evercddl_everparsenomatch
*/
COSE_Format_evercddl_everparsenomatch COSE_Format_parse_everparsenomatch(cbor_det_t c);

/**
Serializer for evercddl_everparsenomatch
*/
size_t
COSE_Format_serialize_everparsenomatch(
  COSE_Format_evercddl_everparsenomatch c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_everparsenomatch_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_everparsenomatch fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_everparsenomatch_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_everparsenomatch___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_everparsenomatch_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_everparsenomatch___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_everparsenomatch___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_everparsenomatch(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_any(cbor_det_t c);

typedef cbor_det_t COSE_Format_evercddl_any_ugly;

typedef COSE_Format_evercddl_any_ugly COSE_Format_evercddl_any;

bool COSE_Format_uu___is_Mkevercddl_any0(cbor_det_t projectee);

/**
Parser for evercddl_any
*/
cbor_det_t COSE_Format_parse_any(cbor_det_t c);

/**
Serializer for evercddl_any
*/
size_t COSE_Format_serialize_any(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_any_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_any_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_any___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_any_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_any___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_any___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_any(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_undefined(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_undefined0 } COSE_Format_evercddl_undefined;

bool COSE_Format_uu___is_Mkevercddl_undefined0(COSE_Format_evercddl_undefined projectee);

/**
Parser for evercddl_undefined
*/
COSE_Format_evercddl_undefined COSE_Format_parse_undefined(cbor_det_t c);

/**
Serializer for evercddl_undefined
*/
size_t
COSE_Format_serialize_undefined(
  COSE_Format_evercddl_undefined c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_undefined_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_undefined fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_undefined_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_undefined___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_undefined_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_undefined___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_undefined___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_undefined(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_nil(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_nil0 } COSE_Format_evercddl_nil;

bool COSE_Format_uu___is_Mkevercddl_nil0(COSE_Format_evercddl_nil projectee);

/**
Parser for evercddl_nil
*/
COSE_Format_evercddl_nil COSE_Format_parse_nil(cbor_det_t c);

/**
Serializer for evercddl_nil
*/
size_t
COSE_Format_serialize_nil(COSE_Format_evercddl_nil c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_nil_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_nil fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_nil_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_nil___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_nil_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_nil___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_nil___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_nil(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_null(cbor_det_t c);

typedef COSE_Format_evercddl_nil COSE_Format_evercddl_null;

bool COSE_Format_uu___is_Mkevercddl_null0(COSE_Format_evercddl_nil projectee);

/**
Parser for evercddl_null
*/
COSE_Format_evercddl_nil COSE_Format_parse_null(cbor_det_t c);

/**
Serializer for evercddl_null
*/
size_t
COSE_Format_serialize_null(COSE_Format_evercddl_nil c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_null_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_nil fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_null_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_null___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_null_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_null___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_null___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_null(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_true(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_true0 } COSE_Format_evercddl_true;

bool COSE_Format_uu___is_Mkevercddl_true0(COSE_Format_evercddl_true projectee);

/**
Parser for evercddl_true
*/
COSE_Format_evercddl_true COSE_Format_parse_true(cbor_det_t c);

/**
Serializer for evercddl_true
*/
size_t
COSE_Format_serialize_true(COSE_Format_evercddl_true c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_true_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_true fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_true_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_true___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_true_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_true___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_true___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_true(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_false(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_false0 } COSE_Format_evercddl_false;

bool COSE_Format_uu___is_Mkevercddl_false0(COSE_Format_evercddl_false projectee);

/**
Parser for evercddl_false
*/
COSE_Format_evercddl_false COSE_Format_parse_false(cbor_det_t c);

/**
Serializer for evercddl_false
*/
size_t
COSE_Format_serialize_false(COSE_Format_evercddl_false c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_false_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_false fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_false_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_false___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_false_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_false___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_false___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_false(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_tstr(cbor_det_t c);

typedef Pulse_Lib_Slice_slice__uint8_t COSE_Format_evercddl_tstr_ugly;

typedef COSE_Format_evercddl_tstr_ugly COSE_Format_evercddl_tstr;

bool COSE_Format_uu___is_Mkevercddl_tstr0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_tstr
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_tstr(cbor_det_t c);

/**
Serializer for evercddl_tstr
*/
size_t
COSE_Format_serialize_tstr(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_tstr_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_tstr_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_tstr___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_tstr_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_tstr___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_tstr___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_tstr(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_bstr(cbor_det_t c);

typedef COSE_Format_evercddl_tstr_ugly COSE_Format_evercddl_bstr;

bool COSE_Format_uu___is_Mkevercddl_bstr0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_bstr
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_bstr(cbor_det_t c);

/**
Serializer for evercddl_bstr
*/
size_t
COSE_Format_serialize_bstr(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_bstr_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_bstr_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_bstr___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_bstr_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_bstr___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_bstr___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_bstr(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_bytes(cbor_det_t c);

typedef COSE_Format_evercddl_bstr COSE_Format_evercddl_bytes;

bool COSE_Format_uu___is_Mkevercddl_bytes0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_bytes
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_bytes(cbor_det_t c);

/**
Serializer for evercddl_bytes
*/
size_t
COSE_Format_serialize_bytes(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_bytes_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_bytes_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_bytes___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_bytes_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_bytes___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_bytes___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_bytes(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_text(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_text;

bool COSE_Format_uu___is_Mkevercddl_text0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_text
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_text(cbor_det_t c);

/**
Serializer for evercddl_text
*/
size_t
COSE_Format_serialize_text(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_text_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_text_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_text___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_text_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_text___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_text___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_text(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_nint(cbor_det_t c);

typedef uint64_t COSE_Format_evercddl_nint;

bool COSE_Format_uu___is_Mkevercddl_nint0(uint64_t projectee);

/**
Parser for evercddl_nint
*/
uint64_t COSE_Format_parse_nint(cbor_det_t c);

/**
Serializer for evercddl_nint
*/
size_t COSE_Format_serialize_nint(uint64_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_nint_Pulse_Lib_Slice_slice_uint8_t_s
{
  uint64_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_nint_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_nint___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_nint_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_nint___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_nint___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_nint(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_uint(cbor_det_t c);

typedef uint64_t COSE_Format_evercddl_uint;

bool COSE_Format_uu___is_Mkevercddl_uint0(uint64_t projectee);

/**
Parser for evercddl_uint
*/
uint64_t COSE_Format_parse_uint(cbor_det_t c);

/**
Serializer for evercddl_uint
*/
size_t COSE_Format_serialize_uint(uint64_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_uint_Pulse_Lib_Slice_slice_uint8_t_s
{
  uint64_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_uint_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_uint___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_uint_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_uint___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_uint___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_uint(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_int(cbor_det_t c);

typedef enum { COSE_Format_Inl, COSE_Format_Inr } COSE_Format_evercddl_int_ugly_tags;

typedef enum { COSE_Format_Mkevercddl_int0, COSE_Format_Mkevercddl_int1 }
COSE_Format_evercddl_int_tags;

typedef struct COSE_Format_evercddl_int_s
{
  COSE_Format_evercddl_int_tags tag;
  union {
    uint64_t case_Mkevercddl_int0;
    uint64_t case_Mkevercddl_int1;
  }
  ;
}
COSE_Format_evercddl_int;

bool COSE_Format_uu___is_Mkevercddl_int0(COSE_Format_evercddl_int projectee);

bool COSE_Format_uu___is_Mkevercddl_int1(COSE_Format_evercddl_int projectee);

/**
Parser for evercddl_int
*/
COSE_Format_evercddl_int COSE_Format_parse_int(cbor_det_t c);

/**
Serializer for evercddl_int
*/
size_t
COSE_Format_serialize_int(COSE_Format_evercddl_int c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_int_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_int fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_int_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_int___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_int_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_int___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_int___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_int(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_cborany(cbor_det_t c);

typedef COSE_Format_evercddl_any COSE_Format_evercddl_cborany;

bool COSE_Format_uu___is_Mkevercddl_cborany0(cbor_det_t projectee);

/**
Parser for evercddl_cborany
*/
cbor_det_t COSE_Format_parse_cborany(cbor_det_t c);

/**
Serializer for evercddl_cborany
*/
size_t COSE_Format_serialize_cborany(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_cborany_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_cborany_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_cborany___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_cborany_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_cborany___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_cborany___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_cborany(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_mimemessage(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_mimemessage;

bool COSE_Format_uu___is_Mkevercddl_mimemessage0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_mimemessage
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_mimemessage(cbor_det_t c);

/**
Serializer for evercddl_mimemessage
*/
size_t
COSE_Format_serialize_mimemessage(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_mimemessage_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_mimemessage_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_mimemessage___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_mimemessage_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_mimemessage___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_mimemessage___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_mimemessage(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_regexp(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_regexp;

bool COSE_Format_uu___is_Mkevercddl_regexp0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_regexp
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_regexp(cbor_det_t c);

/**
Serializer for evercddl_regexp
*/
size_t
COSE_Format_serialize_regexp(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_regexp_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_regexp_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_regexp___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_regexp_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_regexp___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_regexp___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_regexp(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_b64legacy(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_b64legacy;

bool COSE_Format_uu___is_Mkevercddl_b64legacy0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_b64legacy
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_b64legacy(cbor_det_t c);

/**
Serializer for evercddl_b64legacy
*/
size_t
COSE_Format_serialize_b64legacy(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_b64legacy_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_b64legacy_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_b64legacy___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_b64legacy_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_b64legacy___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_b64legacy___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_b64legacy(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_b64url(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_b64url;

bool COSE_Format_uu___is_Mkevercddl_b64url0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_b64url
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_b64url(cbor_det_t c);

/**
Serializer for evercddl_b64url
*/
size_t
COSE_Format_serialize_b64url(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_b64url_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_b64url_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_b64url___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_b64url_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_b64url___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_b64url___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_b64url(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_uri(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_uri;

bool COSE_Format_uu___is_Mkevercddl_uri0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_uri
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_uri(cbor_det_t c);

/**
Serializer for evercddl_uri
*/
size_t
COSE_Format_serialize_uri(Pulse_Lib_Slice_slice__uint8_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_uri_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_uri_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_uri___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_uri_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_uri___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_uri___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_uri(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_encodedcbor(cbor_det_t c);

typedef COSE_Format_evercddl_bstr COSE_Format_evercddl_encodedcbor;

bool COSE_Format_uu___is_Mkevercddl_encodedcbor0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_encodedcbor
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_encodedcbor(cbor_det_t c);

/**
Serializer for evercddl_encodedcbor
*/
size_t
COSE_Format_serialize_encodedcbor(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_encodedcbor_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_encodedcbor_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_encodedcbor___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_encodedcbor_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_encodedcbor___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_encodedcbor___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_encodedcbor(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_eb16(cbor_det_t c);

typedef COSE_Format_evercddl_any COSE_Format_evercddl_eb16;

bool COSE_Format_uu___is_Mkevercddl_eb160(cbor_det_t projectee);

/**
Parser for evercddl_eb16
*/
cbor_det_t COSE_Format_parse_eb16(cbor_det_t c);

/**
Serializer for evercddl_eb16
*/
size_t COSE_Format_serialize_eb16(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_eb16_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_eb16_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb16___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_eb16_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb16___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_eb16___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_eb16(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_eb64legacy(cbor_det_t c);

typedef COSE_Format_evercddl_any COSE_Format_evercddl_eb64legacy;

bool COSE_Format_uu___is_Mkevercddl_eb64legacy0(cbor_det_t projectee);

/**
Parser for evercddl_eb64legacy
*/
cbor_det_t COSE_Format_parse_eb64legacy(cbor_det_t c);

/**
Serializer for evercddl_eb64legacy
*/
size_t COSE_Format_serialize_eb64legacy(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_eb64legacy_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_eb64legacy_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64legacy___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_eb64legacy_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64legacy___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64legacy___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_eb64legacy(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_eb64url(cbor_det_t c);

typedef COSE_Format_evercddl_any COSE_Format_evercddl_eb64url;

bool COSE_Format_uu___is_Mkevercddl_eb64url0(cbor_det_t projectee);

/**
Parser for evercddl_eb64url
*/
cbor_det_t COSE_Format_parse_eb64url(cbor_det_t c);

/**
Serializer for evercddl_eb64url
*/
size_t COSE_Format_serialize_eb64url(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_eb64url_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_eb64url_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64url___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_eb64url_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64url___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_eb64url___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_eb64url(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_number(cbor_det_t c);

typedef COSE_Format_evercddl_int COSE_Format_evercddl_number;

bool COSE_Format_uu___is_Mkevercddl_number0(COSE_Format_evercddl_int projectee);

/**
Parser for evercddl_number
*/
COSE_Format_evercddl_int COSE_Format_parse_number(cbor_det_t c);

/**
Serializer for evercddl_number
*/
size_t
COSE_Format_serialize_number(COSE_Format_evercddl_int c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_number_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_int fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_number_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_number___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_number_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_number___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_number___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_number(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_tdate(cbor_det_t c);

typedef COSE_Format_evercddl_tstr COSE_Format_evercddl_tdate;

bool COSE_Format_uu___is_Mkevercddl_tdate0(Pulse_Lib_Slice_slice__uint8_t projectee);

/**
Parser for evercddl_tdate
*/
Pulse_Lib_Slice_slice__uint8_t COSE_Format_parse_tdate(cbor_det_t c);

/**
Serializer for evercddl_tdate
*/
size_t
COSE_Format_serialize_tdate(
  Pulse_Lib_Slice_slice__uint8_t c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_tdate_Pulse_Lib_Slice_slice_uint8_t_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_tdate_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_tdate___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_tdate_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_tdate___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_tdate___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_tdate(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_values(cbor_det_t c);

typedef COSE_Format_evercddl_any COSE_Format_evercddl_values;

bool COSE_Format_uu___is_Mkevercddl_values0(cbor_det_t projectee);

/**
Parser for evercddl_values
*/
cbor_det_t COSE_Format_parse_values(cbor_det_t c);

/**
Serializer for evercddl_values
*/
size_t COSE_Format_serialize_values(cbor_det_t c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_values_Pulse_Lib_Slice_slice_uint8_t_s
{
  cbor_det_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_values_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_values___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_values_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_values___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_values___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_values(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_label(cbor_det_t c);

typedef struct COSE_Format_evercddl_label_ugly_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    COSE_Format_evercddl_int case_Inl;
    Pulse_Lib_Slice_slice__uint8_t case_Inr;
  }
  ;
}
COSE_Format_evercddl_label_ugly;

typedef enum { COSE_Format_Mkevercddl_label0, COSE_Format_Mkevercddl_label1 }
COSE_Format_evercddl_label_tags;

typedef struct COSE_Format_evercddl_label_s
{
  COSE_Format_evercddl_label_tags tag;
  union {
    COSE_Format_evercddl_int case_Mkevercddl_label0;
    Pulse_Lib_Slice_slice__uint8_t case_Mkevercddl_label1;
  }
  ;
}
COSE_Format_evercddl_label;

bool COSE_Format_uu___is_Mkevercddl_label0(COSE_Format_evercddl_label projectee);

bool COSE_Format_uu___is_Mkevercddl_label1(COSE_Format_evercddl_label projectee);

/**
Parser for evercddl_label
*/
COSE_Format_evercddl_label COSE_Format_parse_label(cbor_det_t c);

/**
Serializer for evercddl_label
*/
size_t
COSE_Format_serialize_label(COSE_Format_evercddl_label c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_label_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_label fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_label_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_label___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_label_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_label___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_label___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_label(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_aux_env29_map_constraint_1(cbor_det_map_entry_t x);

bool COSE_Format_validate_COSE_Key_OKP(cbor_det_t c);

typedef struct FStar_Pervasives_Native_option__COSE_Format_evercddl_bstr_s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  COSE_Format_evercddl_bstr v;
}
FStar_Pervasives_Native_option__COSE_Format_evercddl_bstr;

typedef struct K___COSE_Format_evercddl_label_COSE_Format_evercddl_values_s
{
  COSE_Format_evercddl_label fst;
  cbor_det_t snd;
}
K___COSE_Format_evercddl_label_COSE_Format_evercddl_values;

typedef struct
Pulse_Lib_Slice_slice___COSE_Format_evercddl_label___COSE_Format_evercddl_values__s
{
  K___COSE_Format_evercddl_label_COSE_Format_evercddl_values *elt;
  size_t len;
}
Pulse_Lib_Slice_slice___COSE_Format_evercddl_label___COSE_Format_evercddl_values_;

typedef struct
CDDL_Pulse_Parse_MapGroup_map_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values_s
{
  cbor_det_map_iterator_t cddl_map_iterator_contents;
  bool (*cddl_map_iterator_impl_validate1)(cbor_det_t x0);
  COSE_Format_evercddl_label (*cddl_map_iterator_impl_parse1)(cbor_det_t x0);
  bool (*cddl_map_iterator_impl_validate_ex)(cbor_det_map_entry_t x0);
  bool (*cddl_map_iterator_impl_validate2)(cbor_det_t x0);
  cbor_det_t (*cddl_map_iterator_impl_parse2)(cbor_det_t x0);
}
CDDL_Pulse_Parse_MapGroup_map_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values;

typedef struct
FStar_Pervasives_either__CDDL_Pulse_Types_slice__COSE_Format_evercddl_label___COSE_Format_evercddl_values__CDDL_Pulse_Parse_MapGroup_map_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    Pulse_Lib_Slice_slice___COSE_Format_evercddl_label___COSE_Format_evercddl_values_ case_Inl;
    CDDL_Pulse_Parse_MapGroup_map_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values
    case_Inr;
  }
  ;
}
FStar_Pervasives_either__CDDL_Pulse_Types_slice__COSE_Format_evercddl_label___COSE_Format_evercddl_values__CDDL_Pulse_Parse_MapGroup_map_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values;

typedef struct COSE_Format_evercddl_COSE_Key_OKP_s
{
  COSE_Format_evercddl_label_ugly intkeyneg1;
  FStar_Pervasives_Native_option__COSE_Format_evercddl_bstr intkeyneg2;
  FStar_Pervasives_Native_option__COSE_Format_evercddl_bstr intkeyneg4;
  FStar_Pervasives_either__CDDL_Pulse_Types_slice__COSE_Format_evercddl_label___COSE_Format_evercddl_values__CDDL_Pulse_Parse_MapGroup_map_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values
  _x0;
}
COSE_Format_evercddl_COSE_Key_OKP;

bool COSE_Format_uu___is_Mkevercddl_COSE_Key_OKP0(COSE_Format_evercddl_COSE_Key_OKP projectee);

/**
Parser for evercddl_COSE_Key_OKP
*/
COSE_Format_evercddl_COSE_Key_OKP COSE_Format_parse_COSE_Key_OKP(cbor_det_t c);

/**
Serializer for evercddl_COSE_Key_OKP
*/
size_t
COSE_Format_serialize_COSE_Key_OKP(
  COSE_Format_evercddl_COSE_Key_OKP c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Key_OKP_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Key_OKP fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Key_OKP_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key_OKP___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Key_OKP_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key_OKP___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key_OKP___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Key_OKP(Pulse_Lib_Slice_slice__uint8_t s);

bool
COSE_Format_is_empty_iterate_map_evercddl_label_and_evercddl_values(
  CDDL_Pulse_Parse_MapGroup_map_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values
  i
);

K___COSE_Format_evercddl_label_COSE_Format_evercddl_values
COSE_Format_next_iterate_map_evercddl_label_and_evercddl_values(
  CDDL_Pulse_Parse_MapGroup_map_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values
  *pi
);

bool COSE_Format_validate_COSE_Key(cbor_det_t c);

typedef COSE_Format_evercddl_COSE_Key_OKP COSE_Format_evercddl_COSE_Key;

bool COSE_Format_uu___is_Mkevercddl_COSE_Key0(COSE_Format_evercddl_COSE_Key_OKP projectee);

/**
Parser for evercddl_COSE_Key
*/
COSE_Format_evercddl_COSE_Key_OKP COSE_Format_parse_COSE_Key(cbor_det_t c);

/**
Serializer for evercddl_COSE_Key
*/
size_t
COSE_Format_serialize_COSE_Key(
  COSE_Format_evercddl_COSE_Key_OKP c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Key_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Key_OKP fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Key_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Key_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Key___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Key(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_aux_env32_validate_1(cbor_det_array_iterator_t *pi);

typedef COSE_Format_evercddl_label COSE_Format_aux_env32_type_1;

bool COSE_Format_uu___is_Mkaux_env32_type_10(COSE_Format_evercddl_label projectee);

/**
Parser for aux_env32_type_1
*/
COSE_Format_evercddl_label COSE_Format_aux_env32_parse_1(cbor_det_array_iterator_t c);

/**
Serializer for aux_env32_type_1
*/
bool
COSE_Format_aux_env32_serialize_1(
  COSE_Format_evercddl_label c,
  Pulse_Lib_Slice_slice__uint8_t out,
  uint64_t *out_count,
  size_t *out_size
);

bool COSE_Format_aux_env32_map_constraint_2(cbor_det_map_entry_t x);

bool COSE_Format_validate_header_map(cbor_det_t c);

typedef struct
FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_int_COSE_Format_evercddl_tstr_s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  COSE_Format_evercddl_label_ugly v;
}
FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_int_COSE_Format_evercddl_tstr;

typedef struct Pulse_Lib_Slice_slice__COSE_Format_aux_env32_type_1_s
{
  COSE_Format_evercddl_label *elt;
  size_t len;
}
Pulse_Lib_Slice_slice__COSE_Format_aux_env32_type_1;

typedef struct
CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1_s
{
  cbor_det_array_iterator_t cddl_array_iterator_contents;
  bool (*cddl_array_iterator_impl_validate)(cbor_det_array_iterator_t *x0);
  COSE_Format_evercddl_label (*cddl_array_iterator_impl_parse)(cbor_det_array_iterator_t x0);
}
CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1;

typedef struct
FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    Pulse_Lib_Slice_slice__COSE_Format_aux_env32_type_1 case_Inl;
    CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1
    case_Inr;
  }
  ;
}
FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1;

typedef struct
FStar_Pervasives_Native_option__FStar_Pervasives_either_CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1_s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1
  v;
}
FStar_Pervasives_Native_option__FStar_Pervasives_either_CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1;

typedef struct FStar_Pervasives_either__COSE_Format_evercddl_tstr_COSE_Format_evercddl_int_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    Pulse_Lib_Slice_slice__uint8_t case_Inl;
    COSE_Format_evercddl_int case_Inr;
  }
  ;
}
FStar_Pervasives_either__COSE_Format_evercddl_tstr_COSE_Format_evercddl_int;

typedef struct
FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_tstr_COSE_Format_evercddl_int_s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  FStar_Pervasives_either__COSE_Format_evercddl_tstr_COSE_Format_evercddl_int v;
}
FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_tstr_COSE_Format_evercddl_int;

typedef struct FStar_Pervasives_Native_option__COSE_Format_evercddl_everparsenomatch_s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  COSE_Format_evercddl_everparsenomatch v;
}
FStar_Pervasives_Native_option__COSE_Format_evercddl_everparsenomatch;

typedef struct
K___COSE_Format_evercddl_bstr_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  FStar_Pervasives_Native_option__COSE_Format_evercddl_everparsenomatch snd;
}
K___COSE_Format_evercddl_bstr_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch;

typedef struct
K___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_s
{
  FStar_Pervasives_Native_option__COSE_Format_evercddl_everparsenomatch fst;
  FStar_Pervasives_Native_option__COSE_Format_evercddl_everparsenomatch snd;
}
K___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch;

typedef struct
FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch__s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    K___COSE_Format_evercddl_bstr_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch
    case_Inl;
    K___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch
    case_Inr;
  }
  ;
}
FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_;

typedef struct
FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch__FStar_Pervasives_either__COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch__s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    K___COSE_Format_evercddl_bstr_FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch
    case_Inl;
    FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_
    case_Inr;
  }
  ;
}
FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch__FStar_Pervasives_either__COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_;

typedef struct COSE_Format_evercddl_header_map_s
{
  FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_int_COSE_Format_evercddl_tstr
  intkey1;
  FStar_Pervasives_Native_option__FStar_Pervasives_either_CDDL_Pulse_Types_slice_COSE_Format_aux_env32_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1
  intkey2;
  FStar_Pervasives_Native_option__FStar_Pervasives_either_COSE_Format_evercddl_tstr_COSE_Format_evercddl_int
  intkey3;
  FStar_Pervasives_Native_option__COSE_Format_evercddl_bstr intkey4;
  FStar_Pervasives_either___COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch__FStar_Pervasives_either__COSE_Format_evercddl_bstr___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch___FStar_Pervasives_Native_option_COSE_Format_evercddl_everparsenomatch_
  _x0;
  FStar_Pervasives_either__CDDL_Pulse_Types_slice__COSE_Format_evercddl_label___COSE_Format_evercddl_values__CDDL_Pulse_Parse_MapGroup_map_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_t_CBOR_Pulse_API_Det_Type_cbor_det_map_entry_t_CBOR_Pulse_API_Det_Type_cbor_det_map_iterator_t_COSE_Format_evercddl_label_COSE_Format_evercddl_values
  _x1;
}
COSE_Format_evercddl_header_map;

bool COSE_Format_uu___is_Mkevercddl_header_map0(COSE_Format_evercddl_header_map projectee);

/**
Parser for evercddl_header_map
*/
COSE_Format_evercddl_header_map COSE_Format_parse_header_map(cbor_det_t c);

/**
Serializer for evercddl_header_map
*/
size_t
COSE_Format_serialize_header_map(
  COSE_Format_evercddl_header_map c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_header_map_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_header_map fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_header_map_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_header_map___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_header_map_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_header_map___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_header_map___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_header_map(Pulse_Lib_Slice_slice__uint8_t s);

bool
COSE_Format_is_empty_iterate_array_aux_env32_type_1(
  CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1
  i
);

COSE_Format_evercddl_label
COSE_Format_next_iterate_array_aux_env32_type_1(
  CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env32_type_1
  *pi
);

bool COSE_Format_validate_empty_or_serialized_map(cbor_det_t c);

typedef enum {
  COSE_Format_Mkevercddl_empty_or_serialized_map0,
  COSE_Format_Mkevercddl_empty_or_serialized_map1
}
COSE_Format_evercddl_empty_or_serialized_map_tags;

typedef struct COSE_Format_evercddl_empty_or_serialized_map_s
{
  COSE_Format_evercddl_empty_or_serialized_map_tags tag;
  union {
    COSE_Format_evercddl_header_map case_Mkevercddl_empty_or_serialized_map0;
    Pulse_Lib_Slice_slice__uint8_t case_Mkevercddl_empty_or_serialized_map1;
  }
  ;
}
COSE_Format_evercddl_empty_or_serialized_map;

bool
COSE_Format_uu___is_Mkevercddl_empty_or_serialized_map0(
  COSE_Format_evercddl_empty_or_serialized_map projectee
);

bool
COSE_Format_uu___is_Mkevercddl_empty_or_serialized_map1(
  COSE_Format_evercddl_empty_or_serialized_map projectee
);

/**
Parser for evercddl_empty_or_serialized_map
*/
COSE_Format_evercddl_empty_or_serialized_map
COSE_Format_parse_empty_or_serialized_map(cbor_det_t c);

/**
Serializer for evercddl_empty_or_serialized_map
*/
size_t
COSE_Format_serialize_empty_or_serialized_map(
  COSE_Format_evercddl_empty_or_serialized_map c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_empty_or_serialized_map_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_empty_or_serialized_map fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_empty_or_serialized_map_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_empty_or_serialized_map___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_empty_or_serialized_map_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_empty_or_serialized_map___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_empty_or_serialized_map___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_empty_or_serialized_map(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_Sig_structure(cbor_det_t c);

typedef struct K___COSE_Format_evercddl_bstr_COSE_Format_evercddl_bstr_s
{
  Pulse_Lib_Slice_slice__uint8_t fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_bstr_COSE_Format_evercddl_bstr;

typedef struct
K___COSE_Format_evercddl_empty_or_serialized_map__COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr__s
{
  COSE_Format_evercddl_empty_or_serialized_map fst;
  K___COSE_Format_evercddl_bstr_COSE_Format_evercddl_bstr snd;
}
K___COSE_Format_evercddl_empty_or_serialized_map__COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr_;

typedef struct
FStar_Pervasives_either___COSE_Format_evercddl_empty_or_serialized_map____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr__s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    K___COSE_Format_evercddl_empty_or_serialized_map__COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr_
    case_Inl;
    K___COSE_Format_evercddl_bstr_COSE_Format_evercddl_bstr case_Inr;
  }
  ;
}
FStar_Pervasives_either___COSE_Format_evercddl_empty_or_serialized_map____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr_;

typedef struct COSE_Format_evercddl_Sig_structure_s
{
  COSE_Format_evercddl_int_ugly_tags context;
  COSE_Format_evercddl_empty_or_serialized_map body_protected;
  FStar_Pervasives_either___COSE_Format_evercddl_empty_or_serialized_map____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr____COSE_Format_evercddl_bstr___COSE_Format_evercddl_bstr_
  _x0;
}
COSE_Format_evercddl_Sig_structure;

bool
COSE_Format_uu___is_Mkevercddl_Sig_structure0(COSE_Format_evercddl_Sig_structure projectee);

/**
Parser for evercddl_Sig_structure
*/
COSE_Format_evercddl_Sig_structure COSE_Format_parse_Sig_structure(cbor_det_t c);

/**
Serializer for evercddl_Sig_structure
*/
size_t
COSE_Format_serialize_Sig_structure(
  COSE_Format_evercddl_Sig_structure c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_Sig_structure_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_Sig_structure fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_Sig_structure_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_Sig_structure___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_Sig_structure_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_Sig_structure___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_Sig_structure___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_Sig_structure(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Sign1(cbor_det_t c);

typedef struct FStar_Pervasives_either__COSE_Format_evercddl_bstr_COSE_Format_evercddl_nil_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    Pulse_Lib_Slice_slice__uint8_t case_Inl;
    COSE_Format_evercddl_nil case_Inr;
  }
  ;
}
FStar_Pervasives_either__COSE_Format_evercddl_bstr_COSE_Format_evercddl_nil;

typedef struct COSE_Format_evercddl_COSE_Sign1_s
{
  COSE_Format_evercddl_empty_or_serialized_map protected;
  COSE_Format_evercddl_header_map unprotected;
  FStar_Pervasives_either__COSE_Format_evercddl_bstr_COSE_Format_evercddl_nil payload;
  Pulse_Lib_Slice_slice__uint8_t signature;
}
COSE_Format_evercddl_COSE_Sign1;

bool COSE_Format_uu___is_Mkevercddl_COSE_Sign10(COSE_Format_evercddl_COSE_Sign1 projectee);

/**
Parser for evercddl_COSE_Sign1
*/
COSE_Format_evercddl_COSE_Sign1 COSE_Format_parse_COSE_Sign1(cbor_det_t c);

/**
Serializer for evercddl_COSE_Sign1
*/
size_t
COSE_Format_serialize_COSE_Sign1(
  COSE_Format_evercddl_COSE_Sign1 c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Sign1_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Sign1 fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Sign1_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Sign1_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Sign1(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Sign1_Tagged(cbor_det_t c);

typedef COSE_Format_evercddl_COSE_Sign1 COSE_Format_evercddl_COSE_Sign1_Tagged;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Sign1_Tagged0(COSE_Format_evercddl_COSE_Sign1 projectee);

/**
Parser for evercddl_COSE_Sign1_Tagged
*/
COSE_Format_evercddl_COSE_Sign1 COSE_Format_parse_COSE_Sign1_Tagged(cbor_det_t c);

/**
Serializer for evercddl_COSE_Sign1_Tagged
*/
size_t
COSE_Format_serialize_COSE_Sign1_Tagged(
  COSE_Format_evercddl_COSE_Sign1 c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Sign1_Tagged_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Sign1 fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Sign1_Tagged_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1_Tagged___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Sign1_Tagged_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1_Tagged___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign1_Tagged___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Sign1_Tagged(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Signature(cbor_det_t c);

typedef struct COSE_Format_evercddl_COSE_Signature_s
{
  COSE_Format_evercddl_empty_or_serialized_map protected;
  COSE_Format_evercddl_header_map unprotected;
  Pulse_Lib_Slice_slice__uint8_t signature;
}
COSE_Format_evercddl_COSE_Signature;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Signature0(COSE_Format_evercddl_COSE_Signature projectee);

/**
Parser for evercddl_COSE_Signature
*/
COSE_Format_evercddl_COSE_Signature COSE_Format_parse_COSE_Signature(cbor_det_t c);

/**
Serializer for evercddl_COSE_Signature
*/
size_t
COSE_Format_serialize_COSE_Signature(
  COSE_Format_evercddl_COSE_Signature c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Signature_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Signature fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Signature_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Signature___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Signature_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Signature___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Signature___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Signature(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_aux_env39_validate_1(cbor_det_array_iterator_t *pi);

typedef COSE_Format_evercddl_COSE_Signature COSE_Format_aux_env39_type_1;

bool COSE_Format_uu___is_Mkaux_env39_type_10(COSE_Format_evercddl_COSE_Signature projectee);

/**
Parser for aux_env39_type_1
*/
COSE_Format_evercddl_COSE_Signature COSE_Format_aux_env39_parse_1(cbor_det_array_iterator_t c);

/**
Serializer for aux_env39_type_1
*/
bool
COSE_Format_aux_env39_serialize_1(
  COSE_Format_evercddl_COSE_Signature c,
  Pulse_Lib_Slice_slice__uint8_t out,
  uint64_t *out_count,
  size_t *out_size
);

bool COSE_Format_validate_COSE_Sign(cbor_det_t c);

typedef struct Pulse_Lib_Slice_slice__COSE_Format_aux_env39_type_1_s
{
  COSE_Format_evercddl_COSE_Signature *elt;
  size_t len;
}
Pulse_Lib_Slice_slice__COSE_Format_aux_env39_type_1;

typedef struct
CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1_s
{
  cbor_det_array_iterator_t cddl_array_iterator_contents;
  bool (*cddl_array_iterator_impl_validate)(cbor_det_array_iterator_t *x0);
  COSE_Format_evercddl_COSE_Signature
  (*cddl_array_iterator_impl_parse)(cbor_det_array_iterator_t x0);
}
CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1;

typedef struct
FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env39_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1_s
{
  COSE_Format_evercddl_int_ugly_tags tag;
  union {
    Pulse_Lib_Slice_slice__COSE_Format_aux_env39_type_1 case_Inl;
    CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1
    case_Inr;
  }
  ;
}
FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env39_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1;

typedef struct COSE_Format_evercddl_COSE_Sign_s
{
  COSE_Format_evercddl_empty_or_serialized_map protected;
  COSE_Format_evercddl_header_map unprotected;
  FStar_Pervasives_either__COSE_Format_evercddl_bstr_COSE_Format_evercddl_nil payload;
  FStar_Pervasives_either__CDDL_Pulse_Types_slice_COSE_Format_aux_env39_type_1_CDDL_Pulse_Parse_ArrayGroup_array_iterator_t_CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1
  signatures;
}
COSE_Format_evercddl_COSE_Sign;

bool COSE_Format_uu___is_Mkevercddl_COSE_Sign0(COSE_Format_evercddl_COSE_Sign projectee);

/**
Parser for evercddl_COSE_Sign
*/
COSE_Format_evercddl_COSE_Sign COSE_Format_parse_COSE_Sign(cbor_det_t c);

/**
Serializer for evercddl_COSE_Sign
*/
size_t
COSE_Format_serialize_COSE_Sign(
  COSE_Format_evercddl_COSE_Sign c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Sign_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Sign fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Sign_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Sign_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Sign(Pulse_Lib_Slice_slice__uint8_t s);

bool
COSE_Format_is_empty_iterate_array_aux_env39_type_1(
  CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1
  i
);

COSE_Format_evercddl_COSE_Signature
COSE_Format_next_iterate_array_aux_env39_type_1(
  CDDL_Pulse_Parse_ArrayGroup_array_iterator_t__CBOR_Pulse_API_Det_Type_cbor_det_array_iterator_t_COSE_Format_aux_env39_type_1
  *pi
);

bool COSE_Format_validate_COSE_Sign_Tagged(cbor_det_t c);

typedef COSE_Format_evercddl_COSE_Sign COSE_Format_evercddl_COSE_Sign_Tagged;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Sign_Tagged0(COSE_Format_evercddl_COSE_Sign projectee);

/**
Parser for evercddl_COSE_Sign_Tagged
*/
COSE_Format_evercddl_COSE_Sign COSE_Format_parse_COSE_Sign_Tagged(cbor_det_t c);

/**
Serializer for evercddl_COSE_Sign_Tagged
*/
size_t
COSE_Format_serialize_COSE_Sign_Tagged(
  COSE_Format_evercddl_COSE_Sign c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Sign_Tagged_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Sign fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Sign_Tagged_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign_Tagged___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Sign_Tagged_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign_Tagged___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Sign_Tagged___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Sign_Tagged(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Tagged_Message(cbor_det_t c);

typedef enum {
  COSE_Format_Mkevercddl_COSE_Tagged_Message0,
  COSE_Format_Mkevercddl_COSE_Tagged_Message1
}
COSE_Format_evercddl_COSE_Tagged_Message_tags;

typedef struct COSE_Format_evercddl_COSE_Tagged_Message_s
{
  COSE_Format_evercddl_COSE_Tagged_Message_tags tag;
  union {
    COSE_Format_evercddl_COSE_Sign case_Mkevercddl_COSE_Tagged_Message0;
    COSE_Format_evercddl_COSE_Sign1 case_Mkevercddl_COSE_Tagged_Message1;
  }
  ;
}
COSE_Format_evercddl_COSE_Tagged_Message;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Tagged_Message0(
  COSE_Format_evercddl_COSE_Tagged_Message projectee
);

bool
COSE_Format_uu___is_Mkevercddl_COSE_Tagged_Message1(
  COSE_Format_evercddl_COSE_Tagged_Message projectee
);

/**
Parser for evercddl_COSE_Tagged_Message
*/
COSE_Format_evercddl_COSE_Tagged_Message COSE_Format_parse_COSE_Tagged_Message(cbor_det_t c);

/**
Serializer for evercddl_COSE_Tagged_Message
*/
size_t
COSE_Format_serialize_COSE_Tagged_Message(
  COSE_Format_evercddl_COSE_Tagged_Message c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Tagged_Message_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Tagged_Message fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Tagged_Message_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Tagged_Message___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Tagged_Message_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Tagged_Message___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Tagged_Message___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Tagged_Message(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Untagged_Message(cbor_det_t c);

typedef enum {
  COSE_Format_Mkevercddl_COSE_Untagged_Message0,
  COSE_Format_Mkevercddl_COSE_Untagged_Message1
}
COSE_Format_evercddl_COSE_Untagged_Message_tags;

typedef struct COSE_Format_evercddl_COSE_Untagged_Message_s
{
  COSE_Format_evercddl_COSE_Untagged_Message_tags tag;
  union {
    COSE_Format_evercddl_COSE_Sign case_Mkevercddl_COSE_Untagged_Message0;
    COSE_Format_evercddl_COSE_Sign1 case_Mkevercddl_COSE_Untagged_Message1;
  }
  ;
}
COSE_Format_evercddl_COSE_Untagged_Message;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Untagged_Message0(
  COSE_Format_evercddl_COSE_Untagged_Message projectee
);

bool
COSE_Format_uu___is_Mkevercddl_COSE_Untagged_Message1(
  COSE_Format_evercddl_COSE_Untagged_Message projectee
);

/**
Parser for evercddl_COSE_Untagged_Message
*/
COSE_Format_evercddl_COSE_Untagged_Message
COSE_Format_parse_COSE_Untagged_Message(cbor_det_t c);

/**
Serializer for evercddl_COSE_Untagged_Message
*/
size_t
COSE_Format_serialize_COSE_Untagged_Message(
  COSE_Format_evercddl_COSE_Untagged_Message c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Untagged_Message_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Untagged_Message fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Untagged_Message_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Untagged_Message___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Untagged_Message_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Untagged_Message___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Untagged_Message___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Untagged_Message(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_COSE_Messages(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_COSE_Messages0, COSE_Format_Mkevercddl_COSE_Messages1 }
COSE_Format_evercddl_COSE_Messages_tags;

typedef struct COSE_Format_evercddl_COSE_Messages_s
{
  COSE_Format_evercddl_COSE_Messages_tags tag;
  union {
    COSE_Format_evercddl_COSE_Untagged_Message case_Mkevercddl_COSE_Messages0;
    COSE_Format_evercddl_COSE_Tagged_Message case_Mkevercddl_COSE_Messages1;
  }
  ;
}
COSE_Format_evercddl_COSE_Messages;

bool
COSE_Format_uu___is_Mkevercddl_COSE_Messages0(COSE_Format_evercddl_COSE_Messages projectee);

bool
COSE_Format_uu___is_Mkevercddl_COSE_Messages1(COSE_Format_evercddl_COSE_Messages projectee);

/**
Parser for evercddl_COSE_Messages
*/
COSE_Format_evercddl_COSE_Messages COSE_Format_parse_COSE_Messages(cbor_det_t c);

/**
Serializer for evercddl_COSE_Messages
*/
size_t
COSE_Format_serialize_COSE_Messages(
  COSE_Format_evercddl_COSE_Messages c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_COSE_Messages_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_COSE_Messages fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_COSE_Messages_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Messages___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_COSE_Messages_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Messages___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_COSE_Messages___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_COSE_Messages(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_Internal_Types(cbor_det_t c);

typedef COSE_Format_evercddl_Sig_structure COSE_Format_evercddl_Internal_Types;

bool
COSE_Format_uu___is_Mkevercddl_Internal_Types0(COSE_Format_evercddl_Sig_structure projectee);

/**
Parser for evercddl_Internal_Types
*/
COSE_Format_evercddl_Sig_structure COSE_Format_parse_Internal_Types(cbor_det_t c);

/**
Serializer for evercddl_Internal_Types
*/
size_t
COSE_Format_serialize_Internal_Types(
  COSE_Format_evercddl_Sig_structure c,
  Pulse_Lib_Slice_slice__uint8_t out
);

typedef struct K___COSE_Format_evercddl_Internal_Types_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_Sig_structure fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_Internal_Types_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_Internal_Types___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_Internal_Types_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_Internal_Types___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_Internal_Types___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_Internal_Types(Pulse_Lib_Slice_slice__uint8_t s);

bool COSE_Format_validate_start(cbor_det_t c);

typedef enum { COSE_Format_Mkevercddl_start0, COSE_Format_Mkevercddl_start1 }
COSE_Format_evercddl_start_tags;

typedef struct COSE_Format_evercddl_start_s
{
  COSE_Format_evercddl_start_tags tag;
  union {
    COSE_Format_evercddl_COSE_Messages case_Mkevercddl_start0;
    COSE_Format_evercddl_Sig_structure case_Mkevercddl_start1;
  }
  ;
}
COSE_Format_evercddl_start;

bool COSE_Format_uu___is_Mkevercddl_start0(COSE_Format_evercddl_start projectee);

bool COSE_Format_uu___is_Mkevercddl_start1(COSE_Format_evercddl_start projectee);

/**
Parser for evercddl_start
*/
COSE_Format_evercddl_start COSE_Format_parse_start(cbor_det_t c);

/**
Serializer for evercddl_start
*/
size_t
COSE_Format_serialize_start(COSE_Format_evercddl_start c, Pulse_Lib_Slice_slice__uint8_t out);

typedef struct K___COSE_Format_evercddl_start_Pulse_Lib_Slice_slice_uint8_t_s
{
  COSE_Format_evercddl_start fst;
  Pulse_Lib_Slice_slice__uint8_t snd;
}
K___COSE_Format_evercddl_start_Pulse_Lib_Slice_slice_uint8_t;

typedef struct
FStar_Pervasives_Native_option___COSE_Format_evercddl_start___Pulse_Lib_Slice_slice_uint8_t__s
{
  FStar_Pervasives_Native_option__size_t_tags tag;
  K___COSE_Format_evercddl_start_Pulse_Lib_Slice_slice_uint8_t v;
}
FStar_Pervasives_Native_option___COSE_Format_evercddl_start___Pulse_Lib_Slice_slice_uint8_t_;

FStar_Pervasives_Native_option___COSE_Format_evercddl_start___Pulse_Lib_Slice_slice_uint8_t_
COSE_Format_validate_and_parse_start(Pulse_Lib_Slice_slice__uint8_t s);


#define COSE_Format_H_DEFINED
#endif /* COSE_Format_H */
