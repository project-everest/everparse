//SNIPPET_START: main$
extern probe ProbeAndCopy
extern probe (READ UINT32) ProbeAndReadU32
extern probe (WRITE UINT64) WriteU64
extern probe (INIT) ProbeInit
extern PURE UINT64 UlongToPtr(UINT32 ptr)

typedef struct _UNION(UINT8 tag) {
    switch (tag) {
        case 0:
            UINT8 case0;
        case 1:
            UINT16 case1;
        default: 
            UINT32 other;
    } field;
} UNION;

typedef struct _TLV(UINT8 Expected, UINT16 Len)
{
    UINT8 tag { tag == Expected };
    UINT32 length { length == Len };
    UNION(Expected) payload[:byte-size Len];
} TLV;

typedef struct _WRAPPER(UINT8 Expected, UINT16 Len, EVERPARSE_COPY_BUFFER_T Output)
where (Len > 5)
{
    TLV(Expected, Len - 5) *tlv
        probe ProbeAndCopy(length=Len, destination=Output);
} WRAPPER;

specialize (pointer(*), pointer(UINT32)) WRAPPER WRAPPER_32;

entrypoint
casetype _ENTRY(
    Bool Requestor32,
    UINT8 Expected,
    UINT16 Len,
    EVERPARSE_COPY_BUFFER_T Output)
{
    switch (Requestor32)
    {
        case true:
            WRAPPER_32(Expected, Len, Output) w32;

        case false:
            WRAPPER(Expected, Len, Output) w64;
    }
} ENTRY;
//SNIPPET_END: main$

//SNIPPET_START: alt$
typedef struct _UNION_ARRAY(UINT8 tag, UINT32 len)
{
    UNION(tag) payload[:byte-size len];
} UNION_ARRAY;

typedef struct _TLV_ALT(EVERPARSE_COPY_BUFFER_T Output)
{
    UINT8 tag;
    UINT32 length;
    UNION_ARRAY(tag, length) *ptr 
        probe ProbeAndCopy(length=length, destination=Output);
} TLV_ALT;

specialize (pointer(*), pointer(UINT32)) TLV_ALT TLV_ALT_32;
//SNIPPET_END: alt$
