name: CI
on:
  push:
    branches-ignore:
    - _**
  pull_request:
  merge_group:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          submodules: true
          sparse-checkout: |
            Dockerfile
            deps.Makefile
            opt/Makefile
            opt/hashes.Makefile
            src/package/start-code-server.sh

      - name: Build dependencies
        run: |
          rm -rf .git && docker build -t dzomoeverparsedeps${{ github.run_id }} --pull --target deps .

      - name: Save image
        run: |
          docker save -o deps.tar dzomoeverparsedeps${{ github.run_id }}

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            deps.tar
          name: deps

  lowparse:
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@master
        with:
          submodules: true
      - name: Download deps image
        uses: actions/download-artifact@v4
        with:
          name: deps
      - name: Load deps image
        run: |
          docker load < deps.tar && rm deps.tar
      - name: Build LowParse
        run: |
          rm -rf .git && docker build -t dzomoeverparselowparse${{ github.run_id }} --build-arg base_image=dzomoeverparsedeps${{ github.run_id }} -f .github/workflows/lowparse.Dockerfile .
      - name: Save image
        run: |
          docker save -o lowparse.tar dzomoeverparselowparse${{ github.run_id }}
      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            lowparse.tar
          name: lowparse

  test-lowparse:
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@master
        with:
          submodules: true
          path: everparse
      - name: Download deps image
        uses: actions/download-artifact@v4
        with:
          name: deps
      - name: Load deps image
        run: |
          docker load < deps.tar && rm deps.tar
      - name: Upload EverParse in a container
        run: |
          container=$(docker run -d dzomoeverparsedeps${{ github.run_id }} "sleep infinity") && cd everparse && rm -rf .git && tar czf ../everparse.tgz . && docker cp ../everparse.tgz $container:/mnt/everparse/everparse.tgz && docker exec $container tar --overwrite -xzf everparse.tgz && { echo container=$container >> $GITHUB_ENV ; }
      - name: Build LowParse
        run: |
          docker exec $container make -kj$(nproc) lowparse

  test-3d-qd:
    runs-on: ubuntu-latest
    needs: lowparse
    steps:
      - name: Download lowparse image
        uses: actions/download-artifact@v4
        with:
          name: lowparse
      - name: Load lowparse image
        run: |
          docker load < lowparse.tar && rm lowparse.tar
      - name: Test 3D/QD
        run: |
          docker run dzomoeverparselowparse${{ github.run_id }} "ADMIT_LOWPARSE=1 make -kj$(nproc) 3d-test quackyducky-test lowparse-test asn1-test"

  build-cbor-cddl:
    runs-on: ubuntu-latest
    needs: lowparse
    steps:
      - name: Download lowparse image
        uses: actions/download-artifact@v4
        with:
          name: lowparse
      - name: Load lowparse image
        run: |
          docker load < lowparse.tar && rm lowparse.tar
      - name: Test 3D/QD
        run: |
          docker run dzomoeverparselowparse${{ github.run_id }} "ADMIT_LOWPARSE=1 make -kj$(nproc) cddl cbor-verify"

  test-cbor-cddl:
    runs-on: ubuntu-latest
    needs: lowparse
    steps:
      - name: Download lowparse image
        uses: actions/download-artifact@v4
        with:
          name: lowparse
      - name: Load lowparse image
        run: |
          docker load < lowparse.tar && rm lowparse.tar
      - name: Test 3D/QD
        run: |
          docker run dzomoeverparselowparse${{ github.run_id }} "ADMIT_LOWPARSE=1 ADMIT_CBOR_CDDL=1 make -kj$(nproc) cddl-test cbor-test cose-test"

  ci-3d:
    runs-on: ubuntu-latest
    steps:
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5
      - uses: actions/checkout@master
        with:
          submodules: true
          path: everparse
      - name: Everparse CI
        run: |
          ADMIT=1 make -C everparse -j$(nproc) -k 3d-doc-ci branchname=${{ github.head_ref || github.ref_name }}
        env:
          DZOMO_GITHUB_TOKEN: ${{ secrets.DZOMO_GITHUB_TOKEN }}

  # Branch protection points here.
  ciok:
    runs-on: ubuntu-latest
    needs: [test-lowparse, test-3d-qd, build-cbor-cddl, test-cbor-cddl, ci-3d]
    if: ${{ cancelled() || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure') }}
    steps:
      # Note: we only run on failure. Otherwise this is skipped, which counts
      # as a success.
      - run: exit 1
